#!/usr/bin/env python3

import sys
import os
import soundfile as sf
import numpy as np
from PyQt6.QtWidgets import QApplication, QWidget, QVBoxLayout, QLabel
from PyQt6.QtCore import QFileSystemWatcher, Qt
import pyqtgraph as pg

class WavWatch(QWidget):
    def __init__(self, filename):
        super().__init__()
        self.filename = filename
        self.init_ui()
        self.load_waveform()
        self.file_watcher = QFileSystemWatcher([filename])
        self.file_watcher.fileChanged.connect(self.load_waveform)
    
    def init_ui(self):
        self.setWindowTitle("WavWatch - Live Waveform Viewer")
        self.setGeometry(100, 100, 800, 400)
        self.setStyleSheet("background-color: black;")
        
        layout = QVBoxLayout()
        
        self.plot_widget = pg.PlotWidget()
        self.plot_widget.setBackground("black")
        self.plot_widget.showGrid(x=False, y=False)
        self.plot_widget.getAxis("bottom").setPen(pg.mkPen("#00FFFF"))
        self.plot_widget.getAxis("left").setPen(pg.mkPen("#00FFFF"))
        self.plot_widget.getAxis("left").setStyle(tickLength=-5)
        
        self.waveform_plot = self.plot_widget.plot(pen=pg.mkPen("#FF00FF", width=1.5))
        layout.addWidget(self.plot_widget)
        
        self.file_label = QLabel("", self)
        self.file_label.setStyleSheet("color: #00FFFF; font-size: 14px;")
        layout.addWidget(self.file_label)
        
        self.setLayout(layout)
    
    def load_waveform(self):
        if not os.path.exists(self.filename):
            self.file_label.setText("File not found.")
            return
        try:
            data, samplerate = sf.read(self.filename, always_2d=True)
            time_axis = np.linspace(0, len(data) / samplerate, num=len(data))
            self.waveform_plot.setData(time_axis, data[:, 0])
            self.file_label.setText(f"Viewing: {os.path.basename(self.filename)} | Sample Rate: {samplerate} Hz")
        except Exception as e:
            self.file_label.setText(f"Error loading file: {e}")

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: ./wavwatch_qt.py <filename>")
        sys.exit(1)
    
    app = QApplication(sys.argv)
    viewer = WavWatch(sys.argv[1])
    viewer.show()
    sys.exit(app.exec())

