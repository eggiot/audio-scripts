#!/usr/bin/env python3

import argparse
import numpy as np
import soundfile as sf
import pyaudio

def load_waveform(file_path):
    """Load a single-cycle waveform from a WAV file."""
    try:
        data, sample_rate = sf.read(file_path, dtype='float32')
        if data.ndim > 1:
            data = data[:, 0]  # Use the first channel if multiple are present
        return data, sample_rate
    except Exception as e:
        print(f"Error loading {file_path}: {e}")
        return None, None

def play_waveform(waveform, sample_rate):
    """Play the waveform in a seamless loop using pyaudio."""
    pa = pyaudio.PyAudio()

    stream = pa.open(format=pyaudio.paFloat32,  # Now supports 32-bit float
                     channels=1,
                     rate=sample_rate,
                     output=True)

    try:
        while True:
            stream.write(waveform.tobytes())  # Seamless looping
    except KeyboardInterrupt:
        print("\nPlayback stopped by user.")
    finally:
        stream.stop_stream()
        stream.close()
        pa.terminate()

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Play a single-cycle waveform seamlessly.")
    parser.add_argument("filename", type=str, help="Path to the WAV file.")
    args = parser.parse_args()

    waveform, sample_rate = load_waveform(args.filename)
    if waveform is not None:
        play_waveform(waveform, sample_rate)
    else:
        print("Failed to load waveform.")

